name: release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]-beta.[0-9]+'

env:
  SCCACHE_GHA_ENABLED: 'true'
  RUSTC_WRAPPER: 'sccache'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      is_beta: ${{ steps.is_beta.outputs.is_beta_tag }}
      major_minor_patch_version_tag: ${{ steps.ver.outputs.major_minor_patch_version_tag }}
    environment:
      name: release
      url: https://www.npmjs.com/package/@icp-sdk/bindgen
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: dfinity/ci-tools/actions/setup-python@main

      - name: Setup Commitizen
        uses: dfinity/ci-tools/actions/setup-commitizen@main

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Determine if Beta Release
        id: is_beta
        uses: dfinity/ci-tools/actions/is-beta-tag@main

      - uses: dfinity/ci-tools/actions/extract-version@main
        id: extract-version

      - name: Prepare version
        id: ver
        run: |
          echo "major_minor_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}" >> $GITHUB_OUTPUT
          echo "major_minor_patch_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}.${{ steps.extract-version.outputs.patch }}" >> $GITHUB_OUTPUT
          echo "major_minor_patch_version_tag=${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}.${{ steps.extract-version.outputs.patch }}" >> $GITHUB_OUTPUT

      - name: Build NPM package
        run: pnpm build

      - name: Publish to npm
        env:
          NPM_CONFIG_PROVENANCE: 'true'
        run: |
          pnpm pack

          release_cmd="pnpm publish --verbose --access public --no-git-checks"
          if [ "${{ steps.is_beta.outputs.is_beta_tag }}" = 'true' ]; then
            release_cmd="$release_cmd --tag beta"
          fi
          $release_cmd

      - name: Generate release notes
        uses: dfinity/ci-tools/actions/generate-release-notes@main

      - name: Create Github release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          artifacts: 'icp-sdk-bindgen-${{ github.ref_name }}.tgz'
          bodyFile: 'RELEASE_NOTES.md'
          tag: '${{ github.ref_name }}'
          commit: 'main'
          prerelease: ${{ steps.is_beta.outputs.is_beta_tag == 'true' }}
          makeLatest: ${{ steps.is_beta.outputs.is_beta_tag == 'false' }}

  publish-docs:
    needs: release
    if: ${{ needs.release.outputs.is_beta == 'false' }}
    uses: ./.github/workflows/publish-docs.yml
    with:
      ref: ${{ needs.release.outputs.major_minor_patch_version_tag }}
    secrets: inherit
